MONGO_URL="mongodb://localhost:27017/ECOMMERCE_WEBSITE"
PORT=8000

# import { Card } from "../Models/Cart.js";
# export const addToCard = async (req, res) => {
#     //add to card
#     try {
#         const { productId, tittle, price, qty, imgSrc } = req.body;
#         const userId = req.user;

#         const card = await Card.findOne({ userId })

#         if (!card) {
#             card = new Card({ userId, items: [] });
#         }

#         const itemIndex = card.items.findIndex((item) => item.productId.toString() === productId)

#         if (itemIndex > -1) {
#             card.items[itemIndex].qty += qty;
#             card.items[itemIndex].price += price * qty;
#         } else {
#             card.items.push({ productId, tittle, price, qty, imgSrc });
#         }

#         await card.save();
#         res.json({ message: "items added to card", card });
#     } catch (error) {
#         console.log(error);
#     }
# };

# // get user card

# export const userCard = async (req, res) => {
#     const userId = req.user;
#     const card = await Card.findOne({ userId });
#     if (!card) {
#         return res.json({ message: "card does't got any found" })
#     } else {
#         res.json({ message: "user card found", card });
#     }
# }
# //remove card
# export const removeProductfromCard = async (req, res) => {
#     const productId = req.params.productId;
#     const userId = req.user;
#     const card = await Card.findOne({ userId });
#     if (!card) return res.json({ message: "card does't got any found" });
#     card.items = card.items.filter((item) => item.productId.toString() !== productId);
#     await card.save();
#     res.json({ message: "product remove from card " });
# }
# //remove card
# export const clearCard = async (req, res) => {
#     const userId = req.user;
#     const card = await Card.findOne({ userId });
#     if (!card) {
#         card = new card({ items: [] })
#     } else {
#         card.items = [];
#     }
#     await card.save();
#     res.json({ message: " card cleared" });
# }
# export const decreaseProductQty = async (req, res) => {
#     //decrese qty  from card
#     try {
#         const { productId, qty } = req.body;
#         const userId = req.user;

#         const card = await Card.findOne({ userId })

#         if (!card) {
#             card = new Card({ userId, items: [] });
#         }
#         const itemIndex = card.items.findIndex((item) => item.productId.toString() === productId);

#         if (itemIndex > -1) {
#             const item = card.items[itemIndex]
#             if (item.qty > qty) {
#                 const pricePerUnit = item.price / item.qty
#                 item.qty -= qty
#                 item.price -= pricePerUnit
#             } else {
#                 card.items.splice(itemIndex, 1)
#             }
#             card.items[itemIndex].qty += qty;
#             card.items[itemIndex].price += price * qty;
#         } else {
#             return res.json({ message: "invalide product id" })
#             //card.items.push({ productId, tittle, price, qty, imgSrc });
#         }
#         await card.save();
#         res.json({ message: "items qty decreased", card });
#     } catch (error) {
#         console.log(error);
#     }
# };